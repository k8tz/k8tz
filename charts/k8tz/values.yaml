# Default values for k8tz.

kind: Deployment
replicaCount: 1

namespace: k8tz  # set to `null` to use helm built-in namespace
createNamespace: true  # set to `false` to disable namespace creation by the helm chart
injectionStrategy: initContainer
timezone: UTC
injectedInitContainerName: k8tz
injectAll: true
cronJobTimeZone: false  # requires kubernetes >=1.24.0-beta.0 with 'CronJobTimeZone' feature gate enabled (alpha)
verbose: false

# Labels to apply to all resources
labels: {}

webhook:
  failurePolicy: Fail

  tlsMinVersion: ""
  tlsCipherSuites: ""

  certManager:
    enabled: false
    secretTemplate: {}
    duration: 2160h
    renewBefore: 720h
    issuerRef:
      name: selfsigned
      kind: ClusterIssuer
    privateKey: ~

  crtPEM: |

  keyPEM: |

  caBundle: |

  ignoredNamespaces:
    - kube-system

image:
  repository: quay.io/k8tz/k8tz
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If empty, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 443

# resources claimed for the k8tz admission controller
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# resources claimed for the bootstrap init container
initContainerResources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

topologySpreadConstraints: []

affinity: {}
